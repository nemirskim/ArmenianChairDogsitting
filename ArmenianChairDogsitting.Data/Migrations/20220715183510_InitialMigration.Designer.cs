// <auto-generated />
using System;
using ArmenianChairDogsitting.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArmenianChairDogsitting.Data.Migrations
{
    [DbContext(typeof(ArmenianChairDogsittingContext))]
    [Migration("20220715183510_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AnimalOrder", b =>
                {
                    b.Property<int>("AnimalsId")
                        .HasColumnType("int");

                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.HasKey("AnimalsId", "OrdersId");

                    b.HasIndex("OrdersId");

                    b.ToTable("AnimalOrder");
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Animal", (string)null);
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("OrderId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SitterId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("SitterId");

                    b.ToTable("Order", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("Order");
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.PriceCatalog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("SitterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("SitterId");

                    b.ToTable("PriceCatalog", (string)null);
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.Sitter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.ToTable("Sitter", (string)null);
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.OrderDailySitting", b =>
                {
                    b.HasBaseType("ArmenianChairDogsitting.Data.Entities.Order");

                    b.Property<int>("DayQuantity")
                        .HasColumnType("int");

                    b.Property<int>("WalkQuantity")
                        .HasColumnType("int");

                    b.ToTable("Order", (string)null);

                    b.HasDiscriminator().HasValue("OrderDailySitting");
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.OrderOverexpose", b =>
                {
                    b.HasBaseType("ArmenianChairDogsitting.Data.Entities.Order");

                    b.Property<int>("DayQuantity")
                        .HasColumnType("int")
                        .HasColumnName("OrderOverexpose_DayQuantity");

                    b.Property<int>("WalkPerDayQuantity")
                        .HasColumnType("int");

                    b.ToTable("Order", (string)null);

                    b.HasDiscriminator().HasValue("OrderOverexpose");
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.OrderSittingForDay", b =>
                {
                    b.HasBaseType("ArmenianChairDogsitting.Data.Entities.Order");

                    b.Property<int>("HourQuantity")
                        .HasColumnType("int");

                    b.Property<int>("VisitQuantity")
                        .HasColumnType("int");

                    b.Property<int>("WalkQuantity")
                        .HasColumnType("int")
                        .HasColumnName("OrderSittingForDay_WalkQuantity");

                    b.ToTable("Order", (string)null);

                    b.HasDiscriminator().HasValue("OrderSittingForDay");
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.OrderWalk", b =>
                {
                    b.HasBaseType("ArmenianChairDogsitting.Data.Entities.Order");

                    b.Property<bool>("IsTrial")
                        .HasColumnType("bit");

                    b.Property<int>("WalkQuantity")
                        .HasColumnType("int")
                        .HasColumnName("OrderWalk_WalkQuantity");

                    b.ToTable("Order", (string)null);

                    b.HasDiscriminator().HasValue("OrderWalk");
                });

            modelBuilder.Entity("AnimalOrder", b =>
                {
                    b.HasOne("ArmenianChairDogsitting.Data.Entities.Animal", null)
                        .WithMany()
                        .HasForeignKey("AnimalsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmenianChairDogsitting.Data.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.Comment", b =>
                {
                    b.HasOne("ArmenianChairDogsitting.Data.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmenianChairDogsitting.Data.Entities.Order", "Order")
                        .WithMany("Comments")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.Order", b =>
                {
                    b.HasOne("ArmenianChairDogsitting.Data.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmenianChairDogsitting.Data.Entities.Sitter", "Sitter")
                        .WithMany("Orders")
                        .HasForeignKey("SitterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Sitter");
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.PriceCatalog", b =>
                {
                    b.HasOne("ArmenianChairDogsitting.Data.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ArmenianChairDogsitting.Data.Entities.Sitter", "Sitter")
                        .WithMany("PricesCatalog")
                        .HasForeignKey("SitterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("Sitter");
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.Sitter", b =>
                {
                    b.HasOne("ArmenianChairDogsitting.Data.Entities.Service", null)
                        .WithMany("Sitters")
                        .HasForeignKey("ServiceId");
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.Order", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.Service", b =>
                {
                    b.Navigation("Sitters");
                });

            modelBuilder.Entity("ArmenianChairDogsitting.Data.Entities.Sitter", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("PricesCatalog");
                });
#pragma warning restore 612, 618
        }
    }
}
